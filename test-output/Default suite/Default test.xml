<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-C64J8NP" ignored="0" name="Default test" tests="6" failures="0" timestamp="04 Aug 2020 11:34:44 GMT" time="1.312" errors="0">
  <testcase name="@BeforeTest beforeTest" time="0.0" classname="test.InvalidTest">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;gridbrowser&amp;apos; is required by BeforeTest on method beforeTest but has not been marked @Optional or defined
in C:\Users\ARUP\AppData\Local\Temp\testng-eclipse-629955940\testng-customsuite.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'gridbrowser' is required by BeforeTest on method beforeTest but has not been marked @Optional or defined
in C:\Users\ARUP\AppData\Local\Temp\testng-eclipse-629955940\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:290)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:359)
at org.testng.internal.Parameters.createParameters(Parameters.java:620)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:190)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:209)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase name="@AfterTest close" time="0.078" classname="test.InvalidTest">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at pagepackage.HotelListPage.closeBrowser(HotelListPage.java:126)
at test.InvalidTest.close(InvalidTest.java:128)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.afterRun(TestRunner.java:725)
at org.testng.TestRunner.run(TestRunner.java:509)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @AfterTest close -->
  <testcase name="Test0" time="0.0" classname="test.InvalidTest">
    <skipped/>
  </testcase> <!-- Test0 -->
  <testcase name="invalidLoc" time="0.0" classname="test.InvalidTest">
    <skipped/>
  </testcase> <!-- invalidLoc -->
  <testcase name="stay" time="0.0" classname="test.InvalidTest">
    <skipped/>
  </testcase> <!-- stay -->
  <testcase name="roomNumber" time="0.0" classname="test.InvalidTest">
    <skipped/>
  </testcase> <!-- roomNumber -->
  <testcase name="searchClick" time="0.0" classname="test.InvalidTest">
    <skipped/>
  </testcase> <!-- searchClick -->
  <testcase name="invalidMinPrice" time="0.0" classname="test.InvalidTest">
    <skipped/>
  </testcase> <!-- invalidMinPrice -->
</testsuite> <!-- Default test -->
